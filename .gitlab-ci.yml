# Image source available on https://github.com/Ninja-Squad/docker-rare
# It contains a JDK 8 and a Chrome browser
# Node, NPM and Yarn are installed by Gradle
image: ninjasquad/docker-rare
 
stages:
 - test
 - build
 - deploy

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
 # GRADLE_OPTS: "-Dorg.gradle.daemon=false"
 BETA_SERVER: 10.0.0.132

before_script:
 - export GRADLE_USER_HOME=`pwd`/.gradle

test-backend:
 stage: test
 # the backend tests need an elasticsearch instance
 services:
   # even if that would be ideal
   # we can't just launch the service with just elasticsearch:6.3.1
   # because we need to pass some variables, but they are passed to _all_ containers
   # so they fail the start of other docker images like ninjasquad/docker-rare
   # the only solution is to override the entrypoint of the service and pass the arguments manually
   - name: docker.elastic.co/elasticsearch/elasticsearch:6.3.1
     alias: elasticsearch
     # discovery.type=single-node
     # single-node is necessary to start in development mode
     # so there will be no bootstrap checks that would fail on CI
     # especially the error regarding
     # `max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]`
     # cluster.name=es-rare
     # the cluster name used in tests
     command: ["bin/elasticsearch", "-Ediscovery.type=single-node", "-Ecluster.name=es-rare"]
 script: 
   - ./gradlew :backend:test
 cache:
   key: "$CI_COMMIT_REF_NAME"
   # policy: pull
   paths:
     - build
     - buildSrc
     - .gradle

test-frontend:
 stage: test
 script: 
   - ./gradlew :frontend:test
  cache:
   key: "$CI_COMMIT_REF_NAME"
   # policy: pull
   paths:
     - build
     - buildSrc
     - .gradle
     - frontend/.gradle/
     - frontend/node_modules/

build: 
  stage: build
  script: 
    # tests already executed at previous stage, skipping them now
    - ./gradlew assemble -x test
  artifacts:
    paths:
      - backend/build/libs/*.jar
    expire_in: 5 mins # atm, only keep for deploy stage
 cache:
   key: "$CI_COMMIT_REF_NAME"
   policy: pull
   paths:
     - build
     - buildSrc
     - .gradle
     - frontend/.gradle/
     - frontend/node_modules/

deploy-to-vm-beta:
 stage: deploy
 script:
   - eval $(ssh-agent -s)
   - ssh-add <(echo "$SSH_PRIVATE_KEY")
   - "scp -o StrictHostKeyChecking=no ./backend/build/libs/rare.jar root@${BETA_SERVER}:/opt/rare/"
   # copying data files for later indexing
   - "ssh -o StrictHostKeyChecking=no root@${BETA_SERVER} 'rm -r /tmp/rare/resources ; mkdir -p /tmp/rare/resources'"
   - "scp -o StrictHostKeyChecking=no ./data/rare/*gz root@${BETA_SERVER}:/tmp/rare/resources/"
   - "ssh -o StrictHostKeyChecking=no root@${BETA_SERVER} 'gunzip -rv /tmp/rare/resources'"
   # below label should be remove before merge!
   - "ssh -o StrictHostKeyChecking=no root@${BETA_SERVER} 'service rare restart --spring.profiles.active=beta,rare-app --spring.cloud.config.label=\"chore(_)test-custom-config\"'"
   - "sleep 10"
   - "apt-get update && apt-get install -y curl"
   - "curl -s -XDELETE ${BETA_SERVER}:9200/* ; echo"
#   - "while true ; do curl -s ${BETA_SERVER}:8080/rare/actuator/health"
   - "./scripts/createIndexAndAliases.sh ${BETA_SERVER} ; echo"
   - "./scripts/harvestRare.sh ${BETA_SERVER} ; echo"
   - "echo \"Deploy and index done. Application should be available at: http://${BETA_SERVER}:8080/rare \""

